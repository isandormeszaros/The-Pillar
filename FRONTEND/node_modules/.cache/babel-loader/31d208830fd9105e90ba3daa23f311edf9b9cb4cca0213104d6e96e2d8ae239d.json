{"ast":null,"code":"var _jsxFileName = \"/Users/Sandor/Downloads/FullStack/FRONTEND/frontend1/src/component/filmek.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FilmService from '../../src/services/FilmService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filmek() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    FilmService.getAll().then(response => setData(response.data)).catch(error => setError(error.message));\n  }, []);\n  const handleInputChanges = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(JSON.stringify(formData)); // You can send this data to the server using a POST request\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Filmek (\", data.length, \" film)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error fetching data: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : data.map(film => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [film.leiras, \" : \", film.cim]\n      }, film.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Filmek, \"Yn7uxnzgpzXH5mWWe9zBxk0sQQQ=\");\n_c = Filmek;\nvar _c;\n$RefreshReg$(_c, \"Filmek\");","map":{"version":3,"names":["React","useState","useEffect","FilmService","jsxDEV","_jsxDEV","Filmek","_s","data","setData","error","setError","formData","setFormData","getAll","then","response","catch","message","handleInputChanges","event","name","value","target","handleSubmit","e","preventDefault","console","log","JSON","stringify","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","length","map","film","leiras","cim","id","_c","$RefreshReg$"],"sources":["/Users/Sandor/Downloads/FullStack/FRONTEND/frontend1/src/component/filmek.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FilmService from '../../src/services/FilmService'; \r\n\r\nexport default function Filmek() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [formData, setFormData] = useState({}); \r\n\r\n  useEffect(() => {\r\n    FilmService.getAll()\r\n      .then(response => setData(response.data))\r\n      .catch(error => setError(error.message));\r\n  }, []);\r\n\r\n  const handleInputChanges = event => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(JSON.stringify(formData)); // You can send this data to the server using a POST request\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form inputs */}\r\n      </form>\r\n      <div>\r\n        <h1>Filmek ({data.length} film)</h1>\r\n        {error ? (\r\n          <div>Error fetching data: {error}</div>\r\n        ) : (\r\n          data.map(film => (\r\n            <div key={film.id}>{film.leiras} : {film.cim}</div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,WAAW,CAACW,MAAM,CAAC,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIP,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC,CAAC,CACxCS,KAAK,CAACP,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCV,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACEP,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAM2B,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eACP/B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,GAAI,UAAQ,EAACvB,IAAI,CAAC6B,MAAM,EAAC,QAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnC1B,KAAK,gBACJL,OAAA;QAAA0B,QAAA,GAAK,uBAAqB,EAACrB,KAAK;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAEvC5B,IAAI,CAAC8B,GAAG,CAACC,IAAI,iBACXlC,OAAA;QAAA0B,QAAA,GAAoBQ,IAAI,CAACC,MAAM,EAAC,KAAG,EAACD,IAAI,CAACE,GAAG;MAAA,GAAlCF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CACnD,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CAtCuBD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}